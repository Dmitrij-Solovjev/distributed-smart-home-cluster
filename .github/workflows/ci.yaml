name: CI/CD for relay-service

on:
  push:
    paths:
      - 'relay-service/**'
  workflow_dispatch:

jobs:
  # 1. Run Pytest suite
  test:
    name: Test Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: pytest

  # 2. Build Docker image with 'test' tag
  build:
    name: Build Image for Validation
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        run: |
          docker build -t relay-service:test .

  # 3. Run container smoke test
  smoke:
    name: Smoke Test Container
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull test image
        run: docker pull relay-service:test || true

      - name: Run container smoke test
        run: |
          docker run --rm relay-service:test python -c "import your_entrypoint_module; print('OK')"

  # 4. Publish final image with semantic versioning
  publish:
    name: Publish Image
    runs-on: ubuntu-latest
    needs: smoke
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Determine next version
        id: version
        run: |
          # fetch latest tag from GHCR
          REPO=relay-service
          OWNER=${{ github.repository_owner }}
          LATEST=$(gh api \
            -H "Accept: application/vnd.github.v3+json" \
            /orgs/$OWNER/packages/container/$REPO/versions \
            --jq '.[0].metadata.container.tags[0]' 2>/dev/null || echo "0.1.0")
          echo "Current version: $LATEST"
          IFS='.' read MAJOR MINOR PATCH <<< "$LATEST"
          PATCH=$((PATCH + 1))
          NEXT="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEXT" >> $GITHUB_ENV

      - name: Build final image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/relay-service:${{ env.NEW_VERSION }} .

      - name: Push image
        run: docker push ghcr.io/${{ github.repository_owner }}/relay-service:${{ env.NEW_VERSION }}
