name: CI/CD for relay-service

on:
  push:
    paths:
      - '/**'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        run: |
          echo "LOWER_REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Extract current version
        id: get_version
        run: |
          VERSION_FILE=version.txt
          if [ -f "$VERSION_FILE" ]; then
            VERSION=$(cat $VERSION_FILE)
          else
            VERSION="0.1.0"
          fi
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Current version: $VERSION"

      - name: Increment patch version
        id: bump_version
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ env.LOWER_REPO }}/relay-service:${{ env.NEW_VERSION }} .

      - name: Run tests
        run: |
          docker run --rm ghcr.io/${{ env.LOWER_REPO }}/relay-service:${{ env.NEW_VERSION }} pytest

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ env.LOWER_REPO }}/relay-service:${{ env.NEW_VERSION }}

      - name: Update version.txt
        run: |
          echo "${{ env.NEW_VERSION }}" > version.txt

      - name: Commit and push version update
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add version.txt
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push
