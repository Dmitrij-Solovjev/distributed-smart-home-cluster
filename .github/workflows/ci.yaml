name: CI/CD for relay-service

on:
  push:
    paths:
      - 'relay-service/**'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read         # чтение контента репозитория
  packages: write       # разрешение на запись в GitHub Container Registry

jobs:
  # 1. Run Pytest suite
  test:
    name: Test Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: pytest

  # 2. Build and push a temporary 'test' image to GHCR
  build-test:
    name: Build & Push Test Image
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push test image
        run: |
          IMAGE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service:test
          docker build -t $IMAGE .
          docker push $IMAGE

  # 3. Run container smoke test
  smoke:
    name: Smoke Test Container
    needs: build-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Pull and test container
        run: |
          IMAGE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service:test
          docker pull $IMAGE
          # TODO: Replace with real smoke tests
          #docker run --rm $IMAGE python -c "import your_entrypoint_module; print('OK')"

  # 4. Tag test image as version and push
  publish:
    name: Publish Image
    needs: smoke
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Determine next version
        id: version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
      
          OWNER=${{ github.repository_owner }}
          REPO=distributed-smart-home-cluster
          PACKAGE=relay-service

          echo "Fetching all pages of package versions..."
          PAGE=1
          SEMVER_TAGS=""
          while :; do
            # Страница по 100 элементов (максимум)
            RESPONSE=$(gh api \
              -H "Accept: application/vnd.github.v3+json" \
              "/repos/${OWNER}/${REPO}/packages/container/${PACKAGE}/versions?per_page=100&page=${PAGE}")
            # Извлечь все теги
            PAGE_TAGS=$(echo "$RESPONSE" \
              | jq -r '.[].metadata.container.tags[]' \
              | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' || true)
            # Если в этой странице нет semver-тегов — выходим
            if [[ -z "$PAGE_TAGS" ]]; then
              break
            fi
            SEMVER_TAGS="${SEMVER_TAGS}"$'\n'"${PAGE_TAGS}"
            (( PAGE++ ))
          done
      
          if [[ -z "$(echo "$SEMVER_TAGS" | sed '/^\s*$/d')" ]]; then
            NEXT="0.1.0"
          else
            # Сортируем и берём последний (самый большой) семвер-тег
            LATEST=$(echo "$SEMVER_TAGS" | sort -V | tail -n1)
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST"
            NEXT="${MAJOR}.${MINOR}.$((PATCH + 1))"
          fi

          echo "NEW_VERSION=$NEXT" >> $GITHUB_ENV
          echo "::notice::Determined next patch version: $NEXT"




      - name: Pull, tag and push versioned image
        run: |
          BASE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service
          docker pull $BASE:test
          docker tag $BASE:test $BASE:${{ env.NEW_VERSION }}
          docker push $BASE:${{ env.NEW_VERSION }}
