name: CI/CD for relay-service

on:
  push:
    paths:
      - 'relay-service/**'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read         # чтение контента репозитория
  packages: write       # разрешение на запись в GitHub Container Registry

jobs:
  # 1. Run Pytest suite
  test:
    name: Test Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: pytest

  # 2. Build and push a temporary 'test' image to GHCR
  build-test:
    name: Build & Push Test Image
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push test image
        run: |
          IMAGE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service:test
          docker build -t $IMAGE .
          docker push $IMAGE

  # 3. Run container smoke test
  smoke:
    name: Smoke Test Container
    needs: build-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Pull and test container
        run: |
          IMAGE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service:test
          docker pull $IMAGE
          # TODO: Replace with real smoke tests
          #docker run --rm $IMAGE python -c "import your_entrypoint_module; print('OK')"

  # 4. Tag test image as version and push
  publish:
    name: Publish Image
    needs: smoke
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Determine next version
        id: version
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            // Если пакет 'repo‐scoped', кодируем 'repo/relay-service'
            const pkg = encodeURIComponent(`${repo}/relay-service`); // => "...%2Frelay-service" :contentReference[oaicite:6]{index=6}
            const per_page = 100;
            let all = [];
      
            // Пагинация на /orgs/{owner}/packages/container/{pkg}/versions
            for (let page = 1; ; page++) {
              const res = await github.request(
                `GET /orgs/${owner}/packages/container/${pkg}/versions`, {
                  per_page, page
                }
              );
              if (!res.data.length) break;
              all.push(...res.data);
            }
      
            // Фильтруем SemVer-теги вида 1.2.3
            const semver = all
              .flatMap(v => v.metadata.container.tags)
              .filter(t => /^\d+\.\d+\.\d+$/.test(t)); // :contentReference[oaicite:7]{index=7}
      
            // Натуральная сортировка (major→minor→patch)
            semver.sort((a, b) =>
              a.split('.').map(Number)
               .reduce((d, v, i) => d || (v - b.split('.')[i]), 0)
            );
            const last = semver.pop() || '0.0.0';
            const [M, m, p] = last.split('.').map(Number);
            const next = `${M}.${m}.${p + 1}`;
      
            core.exportVariable('NEW_VERSION', next);
            core.info(`Next version: ${next}`);
      
      - name: Pull, tag and push versioned image
        run: |
          BASE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service
          docker pull $BASE:test
          docker tag $BASE:test $BASE:${{ env.NEW_VERSION }}
          docker push $BASE:${{ env.NEW_VERSION }}
