name: CI/CD for relay-service

on:
  push:
    paths:
      - 'relay-service/**'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read         # чтение контента репозитория
  packages: write       # разрешение на запись в GitHub Container Registry

jobs:
  # 1. Run Pytest suite
  test:
    name: Test Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: pytest

  # 2. Build and push a temporary 'test' image to GHCR
  build-test:
    name: Build & Push Test Image
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push test image
        run: |
          IMAGE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service:test
          docker build -t $IMAGE .
          docker push $IMAGE

  # 3. Run container smoke test
  smoke:
    name: Smoke Test Container
    needs: build-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Pull and test container
        run: |
          IMAGE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service:test
          docker pull $IMAGE
          # TODO: Replace with real smoke tests
          #docker run --rm $IMAGE python -c "import your_entrypoint_module; print('OK')"

  # 4. Tag test image as version and push
  publish:
    name: Publish Image
    needs: smoke
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: relay-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Determine next version
        id: version
        run: |
          REPO=distributed-smart-home-cluster/relay-service
          TAGS=$(gh api \
            -H "Accept: application/vnd.github.v3+json" \
            /orgs/${{ env.OWNER_LOWER }}/packages/container/$REPO/versions \
            --jq '.[].metadata.container.tags[]' 2>/dev/null | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$')

          if [[ -z "$TAGS" ]]; then
            NEXT="0.1.0"
          else
            LATEST=$(echo "$TAGS" | sort -V | tail -n 1)
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST"
            PATCH=$((PATCH + 1))
            NEXT="$MAJOR.$MINOR.$PATCH"
          fi
      
          echo "NEW_VERSION=$NEXT" >> $GITHUB_ENV


      - name: Pull, tag and push versioned image
        run: |
          BASE=ghcr.io/${{ env.OWNER_LOWER }}/distributed-smart-home-cluster/relay-service
          docker pull $BASE:test
          docker tag $BASE:test $BASE:${{ env.NEW_VERSION }}
          docker push $BASE:${{ env.NEW_VERSION }}
